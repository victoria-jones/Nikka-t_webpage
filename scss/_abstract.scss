/** VARIABLES **/

//colors
$color-primary-gold: #d0a348;
$color-primary-gold-light: #fff7da;
$color-primary-gold-medlight: #f2d978;
$color-primary-gold-medium: #e4bf67;
$color-primary-gold-dark: #8d6e30;

$color-grey-dark: #1e1e1e;
$color-black:       #000;
$color-white:       #fff;

$color-alert-red: #FF0A39;

//fonts
$font-primary: 'Newsreader', serif;
$font-display: 'Teko', sans-serif;

//font sizing
$default-font-size: 1.6rem;
$display-font-size: 3.8rem;
$display-font-size-med: 2.2rem;
$display-font-size-medlarge: 3.5rem;
$display-font-size-large: 5.5rem;

//font weight
$display-font-weight: 300;

/** ANIMATIONS **/

@keyframes simpleRotate {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes fadeInLeft {
    from {
        opacity: 0;
        //clip-path: inset(0 100% 0 0);
    }
    to {
        opacity: 1;
        //clip-path: inset(0 0 0 0);
    }
}

@keyframes fadeup {
    from {
        opacity: 0;
        transform: translateY(2rem);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/** MIXINS **/

@mixin fadeupAnimation($delay) {
    opacity: 0;
    transform: translateY(-1rem);
    animation-delay: $delay;
    animation-timing-function: ease-out;
    animation: fadeup 2s $delay ease-out forwards;
}

@mixin fadeInLeftAnimation {
    animation-delay: 2s;
    animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
    animation: fadeInLeft 3.5s .5s cubic-bezier(0.61, 1, 0.88, 1) forwards; //forwards tells the element to retain the ending animation values
}

@mixin arrow-up-polygon-top {
    clip-path: polygon(0% 10%, 50% 0, 100% 10%, 100% 50%, 100% 100%, 0% 100%);

}

@mixin arrow-up-polygon-bottom {
    clip-path: polygon(0% 0%, 50% 0, 100% 0%, 100% 100%, 50% 90%, 0% 100%);
}

@mixin arrow-up-and-down {
    clip-path: polygon(0% 10%, 50% 0, 100% 10%, 100% 50%, 100% 90%, 50% 100%, 0% 90%);

    @include respond(phone) {
        clip-path: polygon(0% 5%, 50% 0, 100% 5%, 100% 50%, 100% 95%, 50% 100%, 0% 95%);
    }
}

@mixin arrow-down-polygon-top {
    clip-path: polygon(0% 0, 50% 0, 100% 0, 100% 90%, 50% 100%, 0% 90%);
}

@mixin arrow-down-polygon-bottom {
    clip-path: polygon(0% 0, 50% 0, 100% 0, 100% 90%, 50% 100%, 0% 90%);

    @include respond(phone) {
        clip-path: polygon(0% 0, 50% 0, 100% 0, 100% 95%, 50% 100%, 0% 95%);
    }
}

@mixin hover-glow {
    &::after {
        content: "";
        position: absolute;
        border-radius: 50%;
        width: 0;
        height: 0;
        box-shadow: 0 0 10rem 5rem $color-primary-gold;
        opacity: 0;
        margin-left: -25%;
    }
    &:hover {
        transform: scale(1.2) rotate(-10deg);
        color: $color-primary-gold-medlight;
        &::after {
            opacity: 1;
        }
    }
}

@mixin gold-reflected-gradient {
    background-image: linear-gradient(to right,
            transparent 5%,
            $color-primary-gold-dark 40%,
            $color-primary-gold,
            $color-primary-gold-medium,
            $color-primary-gold-medlight,
            $color-primary-gold-light,
            $color-primary-gold-medlight,
            $color-primary-gold-medium,
            $color-primary-gold,
            $color-primary-gold-dark 60%,
            transparent 95%
            );
}

@mixin gold-reflected-gradient-notransparency {
    background-image: linear-gradient(to right,
            $color-primary-gold-dark 20%,
            $color-primary-gold,
            $color-primary-gold-medium,
            $color-primary-gold-medlight,
            $color-primary-gold-light,
            $color-primary-gold-medlight,
            $color-primary-gold-medium,
            $color-primary-gold,
            $color-primary-gold-dark 80%
            );
}

@mixin gold-reflect-conic-gradient-transparent {
    background-image: conic-gradient(
        $color-primary-gold-dark 20deg,
        $color-primary-gold,
        $color-primary-gold-medium,
        transparent 120deg
    );
}

@mixin rotatingBorderWithAnimation {
    @include gold-reflect-conic-gradient-transparent;
    animation: simpleRotate 3s infinite linear;
}

@mixin text-stroke($stroke, $color) {
    text-stroke: $stroke $color;
    -webkit-text-stroke: $stroke $color;
}

@mixin alt-text-stroke($stroke, $color) {
    text-shadow: $stroke $stroke 0 $color,
        -$stroke -$stroke 0 $color,
        $stroke $stroke 0 $color,
        -$stroke -$stroke 0 $color,
        $stroke $stroke 0 $color
}

@mixin background-clip {
    background-clip: text;
    -webkit-background-clip: text;
    -moz-background-clip: text;
    text-fill-color: transparent;
    -webkit-text-fill-color: transparent;
    -moz-text-fill-color: transparent;
}

/* MEDIA QUERIES */
/***********
$breakpoints:
    - phone-small   300px
    - phone-med     480px
    - phone         600px
    - tab-port      900px
    - tab-land      1200px
    : med-desktop   1400px
    - big-desktop   1800px

//height breakpoints
    $breakpoints:
        - phone-small-h 650px
        - phone-med-h   740px

EM used here (do not change to different measurement)
1em === 16px
***********/
@mixin respond($breakpoint) {
    @if $breakpoint == phone-small {
        @media only screen and (max-width: 18.75em) { @content };   //300px
    }
    @if $breakpoint == phone-med {
        @media only screen and (max-width: 30em) { @content };      //480px
    }
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };    //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };   //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };      //1200px
    }
    @if $breakpoint == med-desktop {
        @media only screen and (max-width: 87.5em) { @content };        //1400px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };   //1800px
    }
    @if $breakpoint == phone-small-h {
        @media only screen and (max-height: 40.625em) { @content }; //650px
    }
    @if $breakpoint == phone-med-h {
        @media only screen and (max-height: 46.25em) { @content };  //740px
    }
}

/** FUNCTIONS **/